Modelado de una clase.

-CPU  
  *ID
  *MemoriaRAM
    -Tipo
    -Velocidad
    -Cantidad
  *Procesador
    Marca
    Modelo
    Gen
    Slot
    Core
  *TarjetaGrafica
  *PlacaMadre
  *Disco/s
  *Fuente
  *Gabinente

-Monitor
  *ID
  *Pulgadas
  *Resolucion
  *Frecuencia
  *TipoPanel
  
//---------------

Crear clase Calculadora que realice las siguientes operaciones con arreglos:
  -Sumar
  -Restar
  -Multiplicar
  -Dividir  
(Con y sin acarreo)
  -ValorPromedio
  -Min
  -Max

Desarrollo:

Object subclass: #Calculadora
	instanceVariableNames: ''
	classVariableNames: ''
	package: ''
  
(*)Metodo Restar
restar: arreglo menos: otroarreglo
|sal max|
(((arreglo)isArray) & ((otroarreglo)isArray))ifTrue: [ 
	
	((arreglo size)>=(otroarreglo)size)ifTrue: [max:=(arreglo size)]ifFalse: [max:=(otroarreglo size)].
	sal:=Array new: max.
	1 to: max do: [ :i| 
		sal at: i put: ((arreglo at:i)-(otroarreglo at:i))
	].
	^sal
]ifFalse: [ ^'Uno de los parametros "NO" es un arreglo' ].

(*)Metodo Sumar
sumar: arreglo mas: otroarreglo
|sal max|
(((arreglo)isArray) & ((otroarreglo)isArray))ifTrue: [ 
	
	((arreglo size)>=(otroarreglo)size)ifTrue: [max:=(arreglo size)]ifFalse: [max:=(otroarreglo size)].
	sal:=Array new: max.
	1 to: max do: [ :i| 
		sal at: i put: ((arreglo at:i)+(otroarreglo at:i))
	].

	^sal
]ifFalse: [ ^'Uno de los parametros "NO" es un arreglo' ].

(*)Metodo Sumar con carry

sumarC: arreglo mas: otroarreglo
|sal lon resultado sum carry|
lon:=0.
carry:=0.
resultado:=0.
sum:=0.
((arreglo isArray)&(otroarreglo isArray))ifTrue: [ 
	((arreglo size)=(otroarreglo size))ifTrue: [ lon:= (arreglo size) ].
	sal:= Array new: lon+1.
	
	lon to: 1 by: (-1) do: [ :i| 
		
		sum:=((arreglo at: i) + (otroarreglo at: i) + carry).
		(sum > 9)ifTrue: [ carry:=1. resultado := sum-10 ]ifFalse: [carry:=0. resultado := sum].
		sal at: i put: resultado.
				
		].
sal at:1 put: carry.
^sal.
]
ifFalse: [ ^'Uno de los parametros NO es un arreglo' ]
